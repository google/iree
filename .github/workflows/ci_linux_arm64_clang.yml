# Copyright 2024 The IREE Authors
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

name: CI - Linux arm64 clang

on:
  pull_request:
    paths:
      - ".github/workflows/ci_linux_arm64_clang.yml"
  schedule:
    # Weekday mornings at 09:15 UTC = 01:15 PST (UTC - 8).
    - cron: "15 9 * * 1-5"
  workflow_dispatch:

concurrency:
  # A PR number if a pull request and otherwise the commit hash. This cancels
  # queued and in-progress runs for the same PR (presubmit) or commit
  # (postsubmit). The workflow name is prepended to avoid conflicts between
  # different workflows.
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  setup:
    uses: ./.github/workflows/setup.yml

  # TODO(#18238): migrate to new runner cluster
  #   Or switch to GitHub-hosted arm64 runners when available?
  linux_arm64_clang:
    needs: setup
    runs-on:
      - self-hosted # must come first
      - runner-group=${{ needs.setup.outputs.runner-group }}
      - environment=${{ needs.setup.outputs.runner-env }}
      - arm64
      - os-family=Linux
    container: ghcr.io/iree-org/cpubuilder_ubuntu_jammy@sha256:48654cf56d6ec28788ea35d80b0546b1ef57281d7998dbe94b78fd4a5f2d33f0
    defaults:
      run:
        shell: bash
    env:
      BUILD_DIR: build-arm64
    steps:
      - name: "Checking out repository"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          submodules: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
      - name: Install Python requirements
        run: python3 -m pip install -r ./runtime/bindings/python/iree/runtime/build_requirements.txt
      - name: "Building IREE"
        env:
          IREE_WRITE_REMOTE_CCACHE: ${{ needs.setup.outputs.write-caches }}
          CCACHE_NAMESPACE: ci_linux_arm64_clang
        run: |
          export IREE_CCACHE_GCP_TOKEN=$(gcloud auth application-default print-access-token)"
          ./build_tools/cmake/build_all.sh "${BUILD_DIR}"
      - name: "Testing IREE"
        env:
          IREE_ARM_SME_QEMU_AARCH64_BIN: /usr/bin/qemu-aarch64
        run: ./build_tools/cmake/ctest_all.sh "${BUILD_DIR}"
