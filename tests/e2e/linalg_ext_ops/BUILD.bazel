# Copyright 2021 The IREE Authors
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

load("//build_tools/bazel:enforce_glob.bzl", "enforce_glob")
load("//build_tools/bazel:iree_check_test.bzl", "iree_check_single_backend_test_suite")

package(
    features = ["layering_check"],
    licenses = ["notice"],  # Apache 2.0
)

ALL_SRCS = enforce_glob(
    # keep sorted
    [
        "attention.mlir",
        "scan.mlir",
        "scatter.mlir",
        "sort.mlir",
        "top-k.mlir",
        "top-k-scf-lowering.mlir",
        "winograd_input.mlir",
        "winograd_output.mlir",
    ],
    include = ["*.mlir"],
)

iree_check_single_backend_test_suite(
    name = "check_llvm-cpu_local-task",
    srcs = ALL_SRCS,
    driver = "local-task",
    tags = [
        # attention fails with a wasm target, just disable all tests there for now
        #   error: Yield operand #2 is not equivalent to the corresponding iter bbArg
        "nowasm",
    ],
    target_backend = "llvm-cpu",
)

VMVX_SRCS = enforce_glob(
    # keep sorted
    [
        "scan.mlir",
        "scatter.mlir",
        "sort.mlir",
        "top-k.mlir",
        "top-k-scf-lowering.mlir",
        "winograd_input.mlir",
        "winograd_output.mlir",
    ],
    include = ["*.mlir"],
    exclude = [
        "attention.mlir",
    ],
)

iree_check_single_backend_test_suite(
    name = "check_vmvx_local-task",
    srcs = VMVX_SRCS,
    driver = "local-task",
    target_backend = "vmvx",
)

LLVM_GPU_SRCS = enforce_glob(
    # keep sorted
    [
        "scan.mlir",
        "scatter.mlir",
        "sort.mlir",
        "top-k.mlir",
        "winograd_input.mlir",
        "winograd_output.mlir",
    ],
    include = ["*.mlir"],
    exclude = [
        "attention.mlir",
        "top-k-scf-lowering.mlir",
    ],
)

iree_check_single_backend_test_suite(
    name = "check_cuda",
    srcs = LLVM_GPU_SRCS,
    driver = "cuda",
    tags = [
        # CUDA cuInit fails with sanitizer on.
        "noasan",
        "nomsan",
        "notsan",
        "noubsan",
        "requires-gpu-nvidia",
    ],
    target_backend = "cuda",
)

# TODO(#18649): Add back top-k.mlir test once MI250 correctness is resolved.
ROCM_HIP_SRCS = enforce_glob(
    # keep sorted
    [
        "scan.mlir",
        "scatter.mlir",
        "sort.mlir",
        "winograd_input.mlir",
        "winograd_output.mlir",
    ],
    include = ["*.mlir"],
    exclude = [
        "top-k.mlir",
        "attention.mlir",
    ],
)

iree_check_single_backend_test_suite(
    name = "check_rocm_hip",
    srcs = ROCM_HIP_SRCS,
    driver = "hip",
    target_backend = "rocm",
)

iree_check_single_backend_test_suite(
    name = "check_metal-spirv_vulkan",
    srcs = enforce_glob(
        # keep sorted
        [
            "scan.mlir",
            "scatter.mlir",
            "sort.mlir",
            "winograd_input.mlir",
            "winograd_output.mlir",
        ],
        include = ["*.mlir"],
        exclude = [
            "attention.mlir",
            "top-k.mlir",
            "top-k-scf-lowering.mlir",
        ],
    ),
    driver = "metal",
    target_backend = "metal-spirv",
)

iree_check_single_backend_test_suite(
    name = "check_vulkan-spirv_vulkan",
    srcs = enforce_glob(
        # keep sorted
        [
            "scan.mlir",
            "scatter.mlir",
            "sort.mlir",
            "winograd_input.mlir",
            "winograd_output.mlir",
        ],
        include = ["*.mlir"],
        exclude = [
            "attention.mlir",
            "top-k.mlir",
            "top-k-scf-lowering.mlir",
        ],
    ),
    driver = "vulkan",
    target_backend = "vulkan-spirv",
)

# TODO: Remove topk-split-reduction tests? The flag looks like an unfinished experiment.
#
# Disable the top-k-scf-lowering.mlir test.
# The following error in the split-reduction code.ßßß
# [ RUN      ] module.vector_call_topk_1x256
# iree/runtime/src/iree/modules/check/module.cc:375: Failure
# Failed
# Expected equality of these values. Contents does not match.
#   lhs:
#     1x40xi32=[135 135 169 169 247 247 233 233 3 3 7 7 11 11 15 15 19 19 23 23 27 27 31 31 35 35 39 39 43 43 47 47 51 51 55 55 59 59 63 63]
#   rhs:
#    1x40xi32=[135 169 247 233 3 7 11 15 19 23 27 31 35 39 43 47 51 55 59 63 67 71 75 79 83 87 91 95 99 103 107 111 115 119 123 127 131 139 143 147]
iree_check_single_backend_test_suite(
    name = "check_cuda-topk-split-reduction",
    srcs = [
        "top-k.mlir",
        # Falis on CUDA... "top-k-scf-lowering.mlir",
    ],
    compiler_flags = ["--iree-dispatch-creation-topk-split-reduction=2"],
    driver = "cuda",
    tags = [
        # CUDA cuInit fails with sanitizer on.
        "noasan",
        "nomsan",
        "notsan",
        "noubsan",
        "requires-gpu-nvidia",
    ],
    target_backend = "cuda",
)

iree_check_single_backend_test_suite(
    name = "check_cuda-topk-split-reduction-double",
    srcs = [
        "top-k.mlir",
        # Fails on CUDA... "top-k-scf-lowering.mlir",
    ],
    compiler_flags = ["--iree-dispatch-creation-topk-split-reduction=3,2"],
    driver = "cuda",
    tags = [
        # CUDA cuInit fails with sanitizer on.
        "noasan",
        "nomsan",
        "notsan",
        "noubsan",
        "requires-gpu-nvidia",
    ],
    target_backend = "cuda",
)
