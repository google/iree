################################################################################
# Autogenerated by build_tools/bazel_to_cmake/bazel_to_cmake.py from           #
# runtime/src/iree/builtins/ukernel/arch/x86_64/BUILD.bazel                    #
#                                                                              #
# Use iree_cmake_extra_content from iree/build_defs.oss.bzl to add arbitrary   #
# CMake-only content.                                                          #
#                                                                              #
# To disable autogeneration for this file entirely, delete this header.        #
################################################################################

iree_add_all_subdirs()

if(IREE_BUILD_COMPILER AND IREE_TARGET_BACKEND_LLVM_CPU)

iree_bitcode_library(
  NAME
    ukernel_bitcode_x86_64_base
  SRCS
    "mmt4d_x86_64.c"
    "pack_x86_64.c"
    "query_tile_sizes_x86_64.c"
    "unpack_x86_64.c"
  ARCH
    x86_64
)

iree_bitcode_library(
  NAME
    ukernel_bitcode_x86_64_avx2_fma
  SRCS
    "mmt4d_x86_64_avx2_fma.c"
    "pack_x86_64_avx2_fma.c"
    "unpack_x86_64_avx2_fma.c"
  COPTS
    "-mavx"
    "-mavx2"
    "-mfma"
  ARCH
    x86_64
)

iree_bitcode_library(
  NAME
    ukernel_bitcode_x86_64_avx512_base
  SRCS
    "mmt4d_x86_64_avx512_base.c"
    "pack_x86_64_avx512_base.c"
    "unpack_x86_64_avx512_base.c"
  COPTS
    "-mavx"
    "-mavx2"
    "-mfma"
    "-mavx512f"
    "-mavx512vl"
    "-mavx512cd"
    "-mavx512bw"
    "-mavx512dq"
  ARCH
    x86_64
)

iree_bitcode_library(
  NAME
    ukernel_bitcode_x86_64_avx512_vnni
  SRCS
    "mmt4d_x86_64_avx512_vnni.c"
  COPTS
    "-mavx"
    "-mavx2"
    "-mfma"
    "-mavx512f"
    "-mavx512vl"
    "-mavx512cd"
    "-mavx512bw"
    "-mavx512dq"
    "-mavx512vnni"
  ARCH
    x86_64
)

iree_link_bitcode(
  NAME
    ukernel_bitcode_x86_64
  SRCS
    "ukernel_bitcode_x86_64_avx2_fma.bc"
    "ukernel_bitcode_x86_64_avx512_base.bc"
    "ukernel_bitcode_x86_64_avx512_vnni.bc"
    "ukernel_bitcode_x86_64_base.bc"

)

endif()  # IREE_BUILD_COMPILER AND IREE_TARGET_BACKEND_LLVM_CPU

### BAZEL_TO_CMAKE_PRESERVES_ALL_CONTENT_BELOW_THIS_LINE ###

if (NOT (IREE_ARCH STREQUAL "x86_64"))
  return()
endif()

# Target CPUs supporting AVX2+FMA3. That includes Intel Haswell (2013) and newer
# and AMD Excavator (2015) and newer. There is no current plan to look after
# SIMD performance on x86 microarchitectures not supporting this.
iree_select_compiler_opts(IREE_UK_COPTS_X86_64_AVX2_FMA
  CLANG_OR_GCC
    "-mavx2"
    "-mfma"
  MSVC
    "/arch:AVX2"
)

# TODO: Support AVX-VNNI and/or AVX-VNNI-INT8?
# 1. AVX-VNNI is the 256-bit backport of AVX-512-VNNI. It is supported in Alder
#    Lake (2022).
# 2  AVX-VNNI-INT8 is a future ISA extension not yet mentioned in the Intel SDM,
#    but we can glean the following information from these links: it will be
#    supported in Sierra Forest (2024) it will introduce VPDPBSSD, the missing
#    signed*signed counterpart to VNNI's VPDPBUSD, meaning we will finally be
#    able to use the 8bit path, so that VNNI-IN8 will be a >= 2x win for us over
#    VNNI.
#    https://en.wikipedia.org/wiki/Sierra_Forest
#    https://gcc.gnu.org/pipermail/gcc-patches/2022-October/603546.html
#    https://gcc.gnu.org/git/?p=gcc.git;a=commitdiff;h=406675947d26ccbc2108e9689a2918bb36f61a63


# Target CPUs supporting the typical baseline AVX-512 features (F+VL+CD+BW+DQ).
# That includes Intel Skylake/server (2017) and AMD Zen4 (2022) while recent
# non-server x86 microarchitectures not supporting this continue to exist.
iree_select_compiler_opts(IREE_UK_COPTS_X86_64_AVX512_BASE
  CLANG_OR_GCC
    "-mavx512f"
    "-mavx512vl"
    "-mavx512cd"
    "-mavx512bw"
    "-mavx512dq"
  MSVC
    "/arch:AVX512"
)

# Target CPUs supporting the AVX-512 VNNI feature. That includes Intel Sunny
# Cove (2019) and newer, and AMD Zen4 (2022).
iree_select_compiler_opts(IREE_UK_COPTS_X86_64_AVX512_VNNI_RELATIVE
  CLANG_OR_GCC
    "-mavx512vnni"
  MSVC
)
set(IREE_UK_COPTS_X86_64_AVX512_VNNI
  "${IREE_UK_COPTS_X86_64_AVX512_BASE}"
  "${IREE_UK_COPTS_X86_64_AVX512_VNNI_RELATIVE}"
)

iree_cc_library(
  NAME
    common_x86_64
  HDRS
    "common_x86_64.h"
  DEPS
    iree::builtins::ukernel::internal_headers
    iree::schemas::cpu_data
)

iree_cc_library(
  NAME
    x86_64_avx2_fma
  SRCS
    "mmt4d_x86_64_avx2_fma.c"
    "pack_x86_64_avx2_fma.c"
    "unpack_x86_64_avx2_fma.c"
  COPTS
    "${IREE_UK_COPTS_X86_64_AVX2_FMA}"
  DEPS
    iree::builtins::ukernel::internal_headers
)

iree_cc_library(
  NAME
    x86_64_avx512_base
  SRCS
    "mmt4d_x86_64_avx512_base.c"
    "pack_x86_64_avx512_base.c"
    "unpack_x86_64_avx512_base.c"
  COPTS
    "${IREE_UK_COPTS_X86_64_AVX512_BASE}"
  DEPS
    iree::builtins::ukernel::internal_headers
)

iree_cc_library(
  NAME
    x86_64_avx512_vnni
  SRCS
    "mmt4d_x86_64_avx512_vnni.c"
  COPTS
    "${IREE_UK_COPTS_X86_64_AVX512_VNNI}"
  DEPS
    iree::builtins::ukernel::internal_headers
)

iree_cc_library(
  NAME
    x86_64
  SRCS
    "mmt4d_x86_64.c"
    "pack_x86_64.c"
    "query_tile_sizes_x86_64.c"
    "unpack_x86_64.c"
  DEPS
    ::common_x86_64
    ::x86_64_avx2_fma
    ::x86_64_avx512_base
    ::x86_64_avx512_vnni
    iree::base::core_headers
    iree::builtins::ukernel::internal_headers
    ${IREE_UK_X86_64_DEPS}
  PUBLIC
)
